#!/usr/bin/env bash

## load global definitions
if [[ -f /etc/bashrc ]]
then
    . /etc/bashrc
fi

### functions
# function path_not_in_PATH
# Test whether a path already exists in $PATH environment variable.
function path_not_in_PATH ()
{
    local OIFS

    OIFS=$IFS
    IFS=':'
    is_new_path="true"
    for path in $PATH
    do
        if [[ $path = $1 ]]
        then
            is_new_path="false"
            break
        fi
    done
    IFS=$OIFS

    echo $is_new_path
}

# function add_new_PATH
# Add path to head of $PATH environment variable if path is not in $PATH
function add_new_PATH ()
{
    if [[ $(path_not_in_PATH $1) = "true" ]]
    then
        export PATH=$1:$PATH
    else
        echo "$1 already in \$PATH environment variable!"
    fi

    return 0
}

# function emacs_compile_dir
# Batch compile all elisp files under path. The last argument is path to be
# recompiled, all the other arguments is paths to be prepended to emacs
# load-path
function emacs_compile_dir ()
{
    command="emacs --batch -Q -L ."
    count=0
    for dir in $*
    do
        (( count++ ))
        if [[ "$count" -eq "$#" ]]
        then
            command="$command -f batch-byte-compile $dir/*.el"
        else
            command="$command -L $dir"
        fi
    done
    $command
}

### aliases
## git
alias g="git status"
alias ga="git add"
alias gaa="git add --all ."
alias gc="git commit"
alias gb="git branch"
alias gbd="git branch -d"
alias gch="git checkout"
alias gd="git diff"
alias gp="git push"
alias gl="git pull"
alias gr="git remote"

## misc
alias ls="ls -hF --color=tty"
alias ll="ls -la"
alias v="vim"
alias emb="emacs_compile_dir"
alias mkdir="mkdir -pv"

### Environment variables
export LANG=en_US.UTF-8
export TERM=xterm-256color
export HISTCONTROL=ignoreboth:erasedups
add_new_PATH "$HOME/bin"

## User env vars
# Env vars may be useful: LD_LIBRARY_PATH, HDF5_ROOT, GTAGSCONF, CYGWIN_ROOT,
# GTD_ROOT, DROPBOX_ROOT, MIDNIGHT_ROOT
# SUGAR's vars: SUGAR, SUGAR_PRE, BROADR_POOL
ENV_VAR_FILE=~/.bash-kit/env-var.sh
if [[ -f $ENV_VAR_FILE ]]
then
    source $ENV_VAR_FILE
else
    echo "$ENV_VAR_FILE doesn't exist, you can create it to define env vars."
fi
